// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import driver "github.com/arangodb/go-driver"
import mock "github.com/stretchr/testify/mock"

// BodyBuilder is an autogenerated mock type for the BodyBuilder type
type BodyBuilder struct {
	mock.Mock
}

// Clone provides a mock function with given fields:
func (_m *BodyBuilder) Clone() driver.BodyBuilder {
	ret := _m.Called()

	var r0 driver.BodyBuilder
	if rf, ok := ret.Get(0).(func() driver.BodyBuilder); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.BodyBuilder)
		}
	}

	return r0
}

// GetBody provides a mock function with given fields:
func (_m *BodyBuilder) GetBody() []byte {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// GetContentType provides a mock function with given fields:
func (_m *BodyBuilder) GetContentType() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// SetBody provides a mock function with given fields: body
func (_m *BodyBuilder) SetBody(body ...interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, body...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(...interface{}) error); ok {
		r0 = rf(body...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetBodyArray provides a mock function with given fields: bodyArray, mergeArray
func (_m *BodyBuilder) SetBodyArray(bodyArray interface{}, mergeArray []map[string]interface{}) error {
	ret := _m.Called(bodyArray, mergeArray)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, []map[string]interface{}) error); ok {
		r0 = rf(bodyArray, mergeArray)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetBodyImportArray provides a mock function with given fields: bodyArray
func (_m *BodyBuilder) SetBodyImportArray(bodyArray interface{}) error {
	ret := _m.Called(bodyArray)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(bodyArray)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
